#pragma checksum "C:\Users\HP 840 G3\Source\Repos\StajUygulamasi\StajUygulamasi\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "87f4b9489025548e7438c1ac482ea6f31eaa1fbb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"87f4b9489025548e7438c1ac482ea6f31eaa1fbb", @"/Views/Home/Index.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/leaflet-geoman.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/leaflet-geoman.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/style.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/autocomplete.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/sweetalert/sweetalert.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/sweetalert/sweetalert.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/sweetalert/Alert.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/auÄ±tocomplete.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/event.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/modal.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb6806", async() => {
                WriteLiteral(@"

    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Harita</title>
    <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.css""
          integrity=""sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==""");
                BeginWriteAttribute("crossorigin", "\r\n          crossorigin=\"", 350, "\"", 375, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb7601", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n    <script src=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.js\"\r\n            integrity=\"sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==\"");
                BeginWriteAttribute("crossorigin", "\r\n            crossorigin=\"", 634, "\"", 661, 0);
                EndWriteAttribute();
                WriteLiteral("></script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb9279", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"">

    <!-- jQuery library -->
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>

    <!-- Latest compiled JavaScript -->
    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js""></script>

    <link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.14.0/css/all.css""
          integrity=""sha384-HzLeBuhoNPvSl5KYnjx0BT+WB0QEEqLprO+NBkkk5gbc67FTaL7XIGa2w1L0Xbgc"" crossorigin=""anonymous"">
    <script src=""https://kit.fontawesome.com/fda473f18c.js"" crossorigin=""anonymous""></script>

    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb11079", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb12258", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb13437", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb14616", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb15716", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb17528", async() => {
                WriteLiteral(@"

    <div id=""mapid""></div>


    <!-- The Modal -->
    <div class=""modal fade"" id=""myModal"" role=""dialog"">
        <div class=""modal-dialog modal-dialog-centered"">
            <div class=""modal-content"">

                <!-- Modal Header -->
                <div class=""modal-header"">
                    <h4 id=""girisBaslik"" class=""modal-title"">Mahalle Bilgileri</h4>
                </div>

                <!-- Modal body -->
                <div class=""modal-body"">

                    <form class='needs-validation' novalidate>
                        <div class='form-group'>
                            <label for='txtGiris'>KapÄ± No:</label>
                            <input type='text' class='form-control' id='txtGiris' placeholder='Kapi no giriniz.'
                                   name='txtGiris' required>
                            <div class='valid-feedback'>Tamam.</div>
                            <div class='invalid-feedback'>Kaydetmek iÃ§in alanÄ± doldurun.</div>
       ");
                WriteLiteral(@"                 </div>
                        <div class=""form-group"">
                            <div class=""modal-footer"">
                                <button type=""submit"" class=""btn btn-success"" data-dismiss=""modal"" id=""btnKaydet"" data-layer="""">Kaydet</button>
                                <button class=""btn btn-danger"" data-dismiss=""modal"" id=""btnKapat"" data-layer="""">Kapat</button>
                            </div>
                        </div>
                    </form>
                </div>

            </div>

        </div>
    </div>

    <!-- Modal -->
    <div class=""modal fade"" id=""updateModal"" role=""dialog"">
        <div class=""modal-dialog modal-dialog-centered"">

            <!-- Modal content-->
            <div class=""modal-content"">


                <div class=""modal-body"">
                    <p>GÃ¼ncellemeyi kaydetmek ister misiniz?</p>
                </div>

                <div class=""modal-footer"">
                    <button type=""button"" clas");
                WriteLiteral(@"s=""btn btn-success"" data-dismiss=""modal"" id=""btnUpdateKaydet"" data-layer="""" data-entity="""">Kaydet</button>
                    <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"" id=""btnUpdateKaydetme"" data-layer="""" data-entity="""">Kaydetme</button>
                </div>
            </div>

        </div>
    </div>

        <div class=""search-box"">
            <input id=""value"" class=""search-txt"" type=""text""");
                BeginWriteAttribute("name", " name=\"", 4320, "\"", 4327, 0);
                EndWriteAttribute();
                WriteLiteral(@" placeholder=""Adres girin"">
            <button id=""search"" data-fly="""" class=""search-btn"">
                <i class=""fas fa-search""></i>
            </button>

        </div>
   

    <div class=""container"">
        <h3>SEÃÄ°MLERÄ°NÄ°Z</h3>

        <div class=""check_group"">
            <input type=""checkbox"" id=""neighbor"" />
            <label for=""neighbor"">Mahalle</label>
        </div>

        <div class=""check_group"">
            <input type=""checkbox"" id=""door"" />
            <label for=""door"">KapÄ±</label>
        </div>

    </div>

    <script>

        var mymap = mapInit();

        var theCollection = L.layerGroup().addTo(mymap);

        var addresses;

        var change = true;

        var layersToUpdate = [];

        // loadData();

        function addEvent(layer) {

            layer.on(""pm:remove"", function (e) {
                //silmekten emin misiniz diye sor?
                deleteDatabase(layer);
            });

            layer.on(""pm:edit");
                WriteLiteral(@""", function (e) {
                if (layersToUpdate.filter(l => l.leaflet == layer._leaflet_id).length <= 0) {
                    layersToUpdate.push({leaflet: layer._leaflet_id, id: layer.id});
                }
            });

            layer.on(""click"", function (e) {
                bilgiAl(e);
            });

        }

        function bilgiAl(e) {
            var geojsonform = e.target.toGeoJSON();
            if (geojsonform.geometry.type == ""Point"") {
                getDoor(e.target.id).done(function (door) {
                    getNeighbor(door.neighborCode).done(function (neighbor) {
                        var neighborName = neighbor.neighborName;
                        L.popup()
                            .setLatLng(e.latlng)
                            .setContent('<h4>Bilgiler</h4><p> Mahalle: ' + neighborName + '</p>' + '<p> KapÄ±: ' + door.doorCode + '</p>')
                            .openOn(mymap);
                    });
                });

            }");
                WriteLiteral(@"
            else {
                getNeighbor(e.target.id).done(function (neighbor) {
                    L.popup()
                        .setLatLng(e.latlng)
                        .setContent('<h4>Bilgiler</h4><p> Mahalle: ' + neighbor.neighborName + '</p>')
                        .openOn(mymap);
                });
            }
        }

        function getDoor(id) {
            return ajaxGET({
                url: ""/Door/GetDoor"",
                data: { id: id }
            });
        }

        function getNeighbor(id) {
            return ajaxGET({
                url: ""/Neighbor/GetNeighbor"",
                data: { id: id }
            });
        }

        function loadData(id) {
            
            if (id == ""neighbor"") {
                deleteData(""neighbor"");
                ajaxGET({
                    url: ""/Neighbor/GetAll""
                }).done(function (d) {
                    for (var i = 0; i < d.length; i++) {
                        va");
                WriteLiteral(@"r latlngs = L.GeoJSON.coordsToLatLngs(d[i].geometry.coordinates, true);
                        var polygon = L.polygon(latlngs);
                        polygon.id = d[i].id;
                        addEvent(polygon);
                        theCollection.addLayer(polygon);
                    }
                  });
            }
            else if (id == ""door"") {
                deleteData(""door"");
                ajaxGET({
                    url: ""/Door/GetAll""
                }).done(function (d) {
                    for (var i = 0; i < d.length; i++) {
                        var latlng = L.GeoJSON.coordsToLatLng(d[i].geometry.coordinates, true);
                        var marker = L.marker(latlng);
                        marker.id = d[i].id;
                        addEvent(marker);
                        theCollection.addLayer(marker);
                    }
                });
            }
       
        }

        function deleteData(id) {
            if (id == ""nei");
                WriteLiteral(@"ghbor"") {
                var layers = theCollection.getLayers();
                for (var i = 0; i < layers.length; i++) {
                    var data = layers[i].toGeoJSON();
                    if (data.geometry.type == ""Polygon"") {
                        theCollection.removeLayer(layers[i]);
                    }
                }
            }
            else if (id == ""door"") {
                var layers = theCollection.getLayers();
                for (var i = 0; i < layers.length; i++) {
                    var data = layers[i].toGeoJSON();
                    if (data.geometry.type == ""Point"") {
                        theCollection.removeLayer(layers[i]);

                    }
                }
            }
        }

        function deleteDatabase(layer) {

            var goeJsonForm = layer.toGeoJSON();

            if (goeJsonForm.geometry.type == ""Point"") {
                deleteDoor(layer.id);
            }
            else if (goeJsonForm.geometry.type == ""Po");
                WriteLiteral(@"lygon"") {
                deleteNeighbor(layer.id);
            }

        }

        function deleteDoor(id) {
            ajaxPOST({
                url: ""/Door/DeleteDoor"",
                data: { doorId: id }
            });
            change = true;
        }

        function deleteNeighbor(id) {
            ajaxPOST({
                url: ""/Neighbor/DeleteNeighbor"",
                data: { neighborId: id },
                processData: function (d) {
                    var layers = theCollection.getLayers();
                    for (var i = 0; i < layers.length; i++) {
                        if (d.includes(layers[i].id)) {
                            theCollection.removeLayer(layers[i]);
                        }
                    }
                }
            });
            change = true;
        }

        //function updateData(layer) {

        //    if (layer.geometry.type == ""Point"") {
        //        updateDoor(layer);
        //    }
        //    els");
                WriteLiteral(@"e if (layer.geometry.type == ""Polygon"") {
        //        updateNeighbor(layer);
        //    }
        //}

        //function updateDoor(layer) {
        //    LoadinModal(""GÃ¼ncelleniyor..."", ""LÃ¼tfen Bekleyiniz"");

        //    getDoor(layer.properties.id).done(function (door) {
        //        door.geometry = layer.geometry;
        //        ajaxPOST({
        //            url: ""/Door/UpdateDoor"",
        //            data: { door: door },
        //            async: false,
        //            processData: function (d) {
        //                if (d.drm) {
        //                    swal({
        //                        title: ""KapÄ± GÃ¼ncelleme"",
        //                        text: "" KapÄ± koordinatlarÄ±nÄ±z baÅarÄ± ile gÃ¼ncellendi!"",
        //                        type: 'success',
        //                        showConfirmButton: true,
        //                        confirmButtonText: 'Harika',
        //                        html: true
        //     ");
                WriteLiteral(@"               });
        //                    change = true;
        //                }
        //                else {
        //                    Alert_Error(""KapÄ± GÃNCELLEME HatasÄ±"", d.msg);
        //                    var leafletLayer = theCollection.getLayer(layer.properties._leaflet_id);
        //                    leafletLayer.setLatLng(L.GeoJSON.coordsToLatLng(d.data.geometry.coordinates, true));
        //                }

        //            }
        //        });
        //    });
        //}

        //function updateNeighbor(layer) {
        //    LoadinModal(""GÃ¼ncelleniyor..."", ""LÃ¼tfen Bekleyiniz"");

        //    getNeighbor(layer.properties.id).done(function (neighbor) {
        //        neighbor.geometry = layer.geometry;
        //        ajaxPOST({
        //            url: ""/Neighbor/UpdateNeighbor"",
        //            data: { neighbor: neighbor },
        //            async: false,
        //            processData: function (d) {
        //   ");
                WriteLiteral(@"             if (d.drm) {
        //                    swal({
        //                        title: ""Mahalle GÃ¼ncelleme"",
        //                        text: "" Mahalle koordinatlarÄ±nÄ±z baÅarÄ± ile gÃ¼ncellendi!"",
        //                        type: 'success',
        //                        showConfirmButton: true,
        //                        confirmButtonText: 'Harika',
        //                        html: true
        //                    });
        //                    change = true;
        //                }
        //                else {
        //                    Alert_Error(""Mahalle GÃNCELLEME HatasÄ±"", d.msg);
        //                    var leafletLayer = theCollection.getLayer(layer.properties._leaflet_id);
        //                    leafletLayer.setLatLngs(L.GeoJSON.coordsToLatLngs(d.data.geometry.coordinates, true));
        //                }
        //            }
        //        });
        //    });
        //}

        //function sea");
                WriteLiteral(@"rch() {
        //    var input, filter, ul, li, sp, i, txtValue;
        //    input = document.getElementById(""searchInput"");
        //    filter = input.value.toUpperCase();
        //    ul = document.getElementById(""addressList"");
        //    li = ul.getElementsByTagName(""li"");
        //    for (i = 0; i < li.length; i++) {
        //        sp = li[i].getElementsByTagName(""span"")[0];
        //        txtValue = sp.textContent || sp.innerText;
        //        if (txtValue.toUpperCase().indexOf(filter) > -1) {
        //            li[i].style.display = """";
        //        } else {
        //            li[i].style.display = ""none"";
        //        }
        //    }
        //}

        function updateData(model,layers) {
            ajaxPOST({
                url: ""/Home/UpdateHandle"",
                data: { model: model },
                async: false,
                processData: function (d) {
                    if (d.drm) {
                        swal({
        ");
                WriteLiteral(@"                    title: ""GÃ¼ncelleme"",
                            text: "" KoordinatlarÄ±nÄ±z baÅarÄ± ile gÃ¼ncellendi!"",
                            type: 'success',
                            showConfirmButton: true,
                            confirmButtonText: 'Harika',
                            html: true
                        });
                        change = true;
                    }
                    else {
                        Alert_Error(""GÃNCELLEME HatasÄ±"", d.msg);
                        takeOver(layers);
                    }

                }
            });
        }

        function addDatabase(info, layer) {

            if (layer.geometry.type == ""Point"") {
                addDoor(info, layer);
            }
            else if (layer.geometry.type == ""Polygon"") {
                addNeighbor(info, layer);
            }
        }

        function addDoor(info, layer) {
            LoadinModal(""Kaydediliyor..."", ""LÃ¼tfen Bekleyiniz"");

           ");
                WriteLiteral(@" var door = {
                DoorCode: parseInt(info),
                Geometry: layer.geometry
            };

            ajaxPOST({
                url: ""/Door/AddDoor"",
                data: { door: door },
                processData: function (d) {
                    if (d.drm) {
                        swal({
                            title: ""KapÄ± Ekleme"",
                            text: ""KapÄ± numaranÄ±z baÅarÄ± ile veritabanÄ±mÄ±za eklendi!"",
                            type: 'success',
                            showConfirmButton: true,
                            confirmButtonText: 'Harika',
                            html: true
                        });
                        var maplayer = theCollection.getLayer(layer.properties._leaflet_id);
                        maplayer.id = d.data.id;
                        addEvent(maplayer);
                        change = true;
                    }
                    else {
                        Alert_Error(""KapÄ± EKLEM");
                WriteLiteral(@"E HatasÄ±"", d.msg);
                        theCollection.removeLayer(layer.properties._leaflet_id);
                    }
                }
            });
           

        }

        function addNeighbor(info, layer) {

            LoadinModal(""Kaydediliyor..."", ""LÃ¼tfen Bekleyiniz"");

            var neighbor = {
                NeighborName: info,
                Geometry: layer.geometry
            };

            ajaxPOST({
                url: ""/Neighbor/AddNeighbor"",
                data: { neighbor: neighbor },
                processData: function (d) {
                    if (d.drm) {
                        swal({
                            title: ""Mahalle Ekleme"",
                            text: ""Mahalle adÄ±nÄ±z baÅarÄ± ile veritabanÄ±mÄ±za eklendi!"",
                            type: 'success',
                            showConfirmButton: true,
                            confirmButtonText: 'Harika',
                            html: true
                        ");
                WriteLiteral(@"});

                        var maplayer = theCollection.getLayer(layer.properties._leaflet_id);
                        maplayer.id = d.data.id;
                        addEvent(maplayer);
                        change = true;
                    }
                    else {
                        Alert_Error(""Mahalle EKLEME HatasÄ±"", d.msg);
                        theCollection.removeLayer(layer.properties._leaflet_id);
                    }

                }
            });
        }

        function mapInit() {
            var map = L.map('mapid').setView([39.1667, 35.6667], 7); //koordinatlar ve zoom seviyesi

            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                attribution: 'Map data &copy; <a href=""https://www.openstreetmap.org/"">OpenStreetMap</a> contributors, <a href=""https://creativecommons.org/licenses/by-sa/2.0/"">CC-BY-SA</a>, Imagery Â© <a href=""https://www.mapbox.com/"">Mapbox</a>',
               ");
                WriteLiteral(@" maxZoom: 25,
                id: 'mapbox/streets-v11',
                tileSize: 512,
                zoomOffset: -1,
                accessToken: 'pk.eyJ1IjoiY2V0aW5mdXJrYW5vIiwiYSI6ImNrZGN1YWVibzIxZGYyeHNjZzI3OTdzdXgifQ.hXpZJxz6P03IyMHVLDV0sg'
            }).addTo(map);
            //Harita

            map.pm.addControls({
                position: 'topright',
                drawcircle: false,
                drawCircleMarker: false,
                drawPolyline: false,
                drawCircle: false,
                drawRectangle: false,
                cutPolygon: false,
                dragMode: false
            }); //toolbox

            return map;
        }

        function ajaxGET(ajaxObject) {
            return $.ajax({
                type: ""GET"",
                url: ajaxObject.url,
                data: ajaxObject.data
            });
        }

        function ajaxPOST(ajaxObject) {

            $.ajax({
                type: ""POST"",
                ur");
                WriteLiteral(@"l: ajaxObject.url,
                data: ajaxObject.data,
                async: ajaxObject.async

            }).done(ajaxObject.processData);

        }

        function takeOver(layers) {
            for (var i = 0; i < layers.length; i++) {
                let layer = theCollection.getLayer(layers[i].leaflet);
                let geojson = layer.toGeoJSON();

                if (geojson.geometry.type == ""Point"") {
                    getDoor(layers[i].id).done(function (door) {
                        layer.setLatLng(L.GeoJSON.coordsToLatLng(door.geometry.coordinates, true));
                    });
                }
                else if (geojson.geometry.type == ""Polygon"") {
                    getNeighbor(layers[i].id).done(function (neighbor) {
                        layer.setLatLngs(L.GeoJSON.coordsToLatLngs(neighbor.geometry.coordinates, true));
                    });
                }
            }
        }

    </script>

    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb37624", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb38724", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "87f4b9489025548e7438c1ac482ea6f31eaa1fbb39824", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
